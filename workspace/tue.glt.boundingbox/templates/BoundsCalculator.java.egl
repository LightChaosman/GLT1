[% // Generation template for creating the BoundsCalculator class
%]
/**
  * Generated class for calculating the bounds of a boundingbox model
  */
public class BoundsCalculator {
	public static void main(String... args) {
		[%
		for (mc in world.moveCommands)
		{
			var d;
			if (mc.instanceOf(MoveX))
			{
				// Extract the x coordinate from a Move command
				if (mc.instanceOf(MoveLeft))
				{
					d = -mc.distance;
				}
				else if (mc.instanceOf(MoveRight))
				{
					d = mc.distance;
				}
				else throw "class not expected";
				out.println("        processX(" + d + ");");
			}
			else if (mc.instanceOf(MoveY))
			{
				// Extract the y coordinate from a Move command
				if (mc.instanceOf(MoveDown))
				{
					d = -mc.distance;
				}
				else if (mc.instanceOf(MoveUp))
				{
					d = mc.distance;
				}
				else throw "class not expected";
				out.println("        processY(" + d + ");");
			}
		}
		%]
		// Writing output of program to System.out
		System.out.printf("(%d, %d) (%d, %d)%n", xMin, xMax, yMin, yMax);
	}
	
	static int x = 0, y = 0;
	static int xMin = 0, xMax = 0, yMin = 0, yMax = 0;
	
	static void processX(int dx) {
		x += dx;
		if(x < xMin) {
			xMin = x;
		} else if (x > xMax) {
			xMax = x;
		}
	}
	
	static void processY(int dy) {
		y += dy;
		if(y < yMin) {
			yMin = y;
		} else if (y > yMax){
			yMax = y;
		}
	}
}
